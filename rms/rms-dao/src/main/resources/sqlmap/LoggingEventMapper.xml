<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.cmiot.rms.dao.mapper.LoggingEventMapper" >
  <resultMap id="BaseResultMap" type="com.cmiot.rms.dao.model.LoggingEvent" >
    <id column="event_id" property="eventId" jdbcType="BIGINT" />
    <result column="timestmp" property="timestmp" jdbcType="BIGINT" />
    <result column="logger_name" property="loggerName" jdbcType="VARCHAR" />
    <result column="level_string" property="levelString" jdbcType="VARCHAR" />
    <result column="thread_name" property="threadName" jdbcType="VARCHAR" />
    <result column="reference_flag" property="referenceFlag" jdbcType="SMALLINT" />
    <result column="arg0" property="arg0" jdbcType="VARCHAR" />
    <result column="arg1" property="arg1" jdbcType="VARCHAR" />
    <result column="arg2" property="arg2" jdbcType="VARCHAR" />
    <result column="arg3" property="arg3" jdbcType="VARCHAR" />
    <result column="caller_filename" property="callerFilename" jdbcType="VARCHAR" />
    <result column="caller_class" property="callerClass" jdbcType="VARCHAR" />
    <result column="caller_method" property="callerMethod" jdbcType="VARCHAR" />
    <result column="caller_line" property="callerLine" jdbcType="CHAR" />
  </resultMap>
  <resultMap id="ResultMapWithBLOBs" type="com.cmiot.rms.dao.model.LoggingEvent" extends="BaseResultMap" >
    <result column="formatted_message" property="formattedMessage" jdbcType="LONGVARCHAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    event_id, timestmp, logger_name, level_string, thread_name, reference_flag, arg0, 
    arg1, arg2, arg3, caller_filename, caller_class, caller_method, caller_line
  </sql>
  <sql id="Blob_Column_List" >
    formatted_message
  </sql>
  <select id="selectByPrimaryKey" resultMap="ResultMapWithBLOBs" parameterType="java.lang.Long" >
    select 
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from logging_event
    where event_id = #{eventId,jdbcType=BIGINT}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Long" >
    delete from logging_event
    where event_id = #{eventId,jdbcType=BIGINT}
  </delete>
  <insert id="insert" parameterType="com.cmiot.rms.dao.model.LoggingEvent" >
    insert into logging_event (event_id, timestmp, logger_name, 
      level_string, thread_name, reference_flag, 
      arg0, arg1, arg2, arg3, 
      caller_filename, caller_class, caller_method, 
      caller_line, formatted_message)
    values (#{eventId,jdbcType=BIGINT}, #{timestmp,jdbcType=BIGINT}, #{loggerName,jdbcType=VARCHAR}, 
      #{levelString,jdbcType=VARCHAR}, #{threadName,jdbcType=VARCHAR}, #{referenceFlag,jdbcType=SMALLINT}, 
      #{arg0,jdbcType=VARCHAR}, #{arg1,jdbcType=VARCHAR}, #{arg2,jdbcType=VARCHAR}, #{arg3,jdbcType=VARCHAR}, 
      #{callerFilename,jdbcType=VARCHAR}, #{callerClass,jdbcType=VARCHAR}, #{callerMethod,jdbcType=VARCHAR}, 
      #{callerLine,jdbcType=CHAR}, #{formattedMessage,jdbcType=LONGVARCHAR})
  </insert>
  <insert id="insertSelective" parameterType="com.cmiot.rms.dao.model.LoggingEvent" >
    insert into logging_event
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="eventId != null" >
        event_id,
      </if>
      <if test="timestmp != null" >
        timestmp,
      </if>
      <if test="loggerName != null" >
        logger_name,
      </if>
      <if test="levelString != null" >
        level_string,
      </if>
      <if test="threadName != null" >
        thread_name,
      </if>
      <if test="referenceFlag != null" >
        reference_flag,
      </if>
      <if test="arg0 != null" >
        arg0,
      </if>
      <if test="arg1 != null" >
        arg1,
      </if>
      <if test="arg2 != null" >
        arg2,
      </if>
      <if test="arg3 != null" >
        arg3,
      </if>
      <if test="callerFilename != null" >
        caller_filename,
      </if>
      <if test="callerClass != null" >
        caller_class,
      </if>
      <if test="callerMethod != null" >
        caller_method,
      </if>
      <if test="callerLine != null" >
        caller_line,
      </if>
      <if test="formattedMessage != null" >
        formatted_message,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="eventId != null" >
        #{eventId,jdbcType=BIGINT},
      </if>
      <if test="timestmp != null" >
        #{timestmp,jdbcType=BIGINT},
      </if>
      <if test="loggerName != null" >
        #{loggerName,jdbcType=VARCHAR},
      </if>
      <if test="levelString != null" >
        #{levelString,jdbcType=VARCHAR},
      </if>
      <if test="threadName != null" >
        #{threadName,jdbcType=VARCHAR},
      </if>
      <if test="referenceFlag != null" >
        #{referenceFlag,jdbcType=SMALLINT},
      </if>
      <if test="arg0 != null" >
        #{arg0,jdbcType=VARCHAR},
      </if>
      <if test="arg1 != null" >
        #{arg1,jdbcType=VARCHAR},
      </if>
      <if test="arg2 != null" >
        #{arg2,jdbcType=VARCHAR},
      </if>
      <if test="arg3 != null" >
        #{arg3,jdbcType=VARCHAR},
      </if>
      <if test="callerFilename != null" >
        #{callerFilename,jdbcType=VARCHAR},
      </if>
      <if test="callerClass != null" >
        #{callerClass,jdbcType=VARCHAR},
      </if>
      <if test="callerMethod != null" >
        #{callerMethod,jdbcType=VARCHAR},
      </if>
      <if test="callerLine != null" >
        #{callerLine,jdbcType=CHAR},
      </if>
      <if test="formattedMessage != null" >
        #{formattedMessage,jdbcType=LONGVARCHAR},
      </if>
    </trim>
  </insert>
  <update id="updateByPrimaryKeySelective" parameterType="com.cmiot.rms.dao.model.LoggingEvent" >
    update logging_event
    <set >
      <if test="timestmp != null" >
        timestmp = #{timestmp,jdbcType=BIGINT},
      </if>
      <if test="loggerName != null" >
        logger_name = #{loggerName,jdbcType=VARCHAR},
      </if>
      <if test="levelString != null" >
        level_string = #{levelString,jdbcType=VARCHAR},
      </if>
      <if test="threadName != null" >
        thread_name = #{threadName,jdbcType=VARCHAR},
      </if>
      <if test="referenceFlag != null" >
        reference_flag = #{referenceFlag,jdbcType=SMALLINT},
      </if>
      <if test="arg0 != null" >
        arg0 = #{arg0,jdbcType=VARCHAR},
      </if>
      <if test="arg1 != null" >
        arg1 = #{arg1,jdbcType=VARCHAR},
      </if>
      <if test="arg2 != null" >
        arg2 = #{arg2,jdbcType=VARCHAR},
      </if>
      <if test="arg3 != null" >
        arg3 = #{arg3,jdbcType=VARCHAR},
      </if>
      <if test="callerFilename != null" >
        caller_filename = #{callerFilename,jdbcType=VARCHAR},
      </if>
      <if test="callerClass != null" >
        caller_class = #{callerClass,jdbcType=VARCHAR},
      </if>
      <if test="callerMethod != null" >
        caller_method = #{callerMethod,jdbcType=VARCHAR},
      </if>
      <if test="callerLine != null" >
        caller_line = #{callerLine,jdbcType=CHAR},
      </if>
      <if test="formattedMessage != null" >
        formatted_message = #{formattedMessage,jdbcType=LONGVARCHAR},
      </if>
    </set>
    where event_id = #{eventId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKeyWithBLOBs" parameterType="com.cmiot.rms.dao.model.LoggingEvent" >
    update logging_event
    set timestmp = #{timestmp,jdbcType=BIGINT},
      logger_name = #{loggerName,jdbcType=VARCHAR},
      level_string = #{levelString,jdbcType=VARCHAR},
      thread_name = #{threadName,jdbcType=VARCHAR},
      reference_flag = #{referenceFlag,jdbcType=SMALLINT},
      arg0 = #{arg0,jdbcType=VARCHAR},
      arg1 = #{arg1,jdbcType=VARCHAR},
      arg2 = #{arg2,jdbcType=VARCHAR},
      arg3 = #{arg3,jdbcType=VARCHAR},
      caller_filename = #{callerFilename,jdbcType=VARCHAR},
      caller_class = #{callerClass,jdbcType=VARCHAR},
      caller_method = #{callerMethod,jdbcType=VARCHAR},
      caller_line = #{callerLine,jdbcType=CHAR},
      formatted_message = #{formattedMessage,jdbcType=LONGVARCHAR}
    where event_id = #{eventId,jdbcType=BIGINT}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.cmiot.rms.dao.model.LoggingEvent" >
    update logging_event
    set timestmp = #{timestmp,jdbcType=BIGINT},
      logger_name = #{loggerName,jdbcType=VARCHAR},
      level_string = #{levelString,jdbcType=VARCHAR},
      thread_name = #{threadName,jdbcType=VARCHAR},
      reference_flag = #{referenceFlag,jdbcType=SMALLINT},
      arg0 = #{arg0,jdbcType=VARCHAR},
      arg1 = #{arg1,jdbcType=VARCHAR},
      arg2 = #{arg2,jdbcType=VARCHAR},
      arg3 = #{arg3,jdbcType=VARCHAR},
      caller_filename = #{callerFilename,jdbcType=VARCHAR},
      caller_class = #{callerClass,jdbcType=VARCHAR},
      caller_method = #{callerMethod,jdbcType=VARCHAR},
      caller_line = #{callerLine,jdbcType=CHAR}
    where event_id = #{eventId,jdbcType=BIGINT}
  </update>


  <select id="queryList4Page" parameterType="com.cmiot.rms.dao.model.LoggingEvent" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from logging_event
    <!-- 查询操作日志 -->
    <if test="arg0 == 1">
      <trim prefix="where" prefixOverrides="and">
          and arg0 = 1
        <if test="startTime != null">
          and <![CDATA[ timestmp >= #{startTime}]]>
        </if>
        <if test="endTime != null">
          and <![CDATA[ timestmp <= #{endTime}]]>
        </if>
        <if test="arg1 != 0 and arg1 != null">
          and arg1 = #{arg1}
        </if>
        <if test="arg3 != null and arg3 !=''">
          AND arg3 LIKE  CONCAT('%','${arg3}','%' )
        </if>
      </trim>
    </if>
    <!-- 接口调用日志 -->
    <if test="arg0 != 1">
      <trim prefix="where" prefixOverrides="and">
          and (arg0 = 3 or arg0 = 2)
        <if test="arg1 != null and arg1 !=''">
          and arg1 = #{arg1} OR arg2 = #{arg2}
        </if>
      </trim>
    </if>

    ORDER BY timestmp desc
  </select>



  <select id="queryList" parameterType="com.cmiot.rms.dao.model.LoggingEvent" resultMap="ResultMapWithBLOBs">
    select
    <include refid="Base_Column_List" />
    ,
    <include refid="Blob_Column_List" />
    from logging_event
    <!-- 查询操作日志 -->
      <trim prefix="where" prefixOverrides="and">

        <if test='arg0 != "" and arg0 != null'>
          and arg0 = #{arg0}
        </if>
        <if test='arg1 != "" and arg1 != null'>
          and arg1 = #{arg1}
        </if>
        <if test="startTime != null">
          and <![CDATA[ timestmp >= #{startTime}]]>
        </if>
        <if test="endTime != null">
          and <![CDATA[ timestmp <= #{endTime}]]>
        </if>
        <if test='arg2 != "" and arg2 != null'>
          and arg2 = #{arg2}
        </if>
        <if test='userList != null'>
        	and arg3 IN
        	<foreach  collection="userList" index="index" item="item" open="(" separator="," close=")">
      		#{item,jdbcType=VARCHAR}
    		</foreach>
        </if>
        
        <if test="arg3 != null and arg3 !=''">
          AND arg3 LIKE  CONCAT('%',#{arg3},'%' )
        </if>
      </trim>
    ORDER BY timestmp desc
  </select>
</mapper>